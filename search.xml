<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Telegraf + InfluxDB2 + Grafana 搭建可监控环境</title>
    <url>/2023/11/17/2023-11-17-I/</url>
    <content><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>笔者将搭建一个 Telegraf + Influxdb + Grafana 可监控环境，通过这套工具组合，可以构建实时监控系统，实时分析和展示各种指标和数据，帮助用户更好地理解和管理系统的运行状态。</p>
<ul>
<li><strong>Telegraf</strong> 收集数据：开源的服务器代理程序，用于收集、处理和发送指标数据。</li>
<li><strong>Influxdb</strong> 存储数据：开源的时序数据库，专门用于存储和查询时间相关的数据，旨在为监控、分析和可视化应用程序提供高性能的数据存储解决方案。</li>
<li><strong>Grafana</strong> 展示数据：开源的数据可视化和监控平台，用于实时监控、分析和可视化各种指标数据。它提供了丰富的图表、仪表盘和警报功能，使用户能够直观地理解和分析数据。</li>
</ul>
<h1 id="二、环境"><a href="#二、环境" class="headerlink" title="二、环境"></a>二、环境</h1><ul>
<li><p><strong>工作环境</strong></p>
<p>硬件: 树莓派4B 8G&#x2F;64bit<br>系统: Ubuntu 22.04.3 LTS (GNU&#x2F;Linux 5.15.0-1042-raspi aarch64)<br>Docker: Standalone 20.10.24</p>
</li>
<li><p><strong>搭建环境</strong></p>
<p>Telegraf: 1.21.4+ds1-0ubuntu2<br>Influxdb: 2.7.4<br>Grafana: 10.2.1-ubuntu</p>
</li>
</ul>
<h1 id="三、正文"><a href="#三、正文" class="headerlink" title="三、正文"></a>三、正文</h1><ul>
<li><p>在Docker中安装Influxdb：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> pull influxdb</span><br><span class="line"><span class="attribute">docker</span> run -d --name influxdb -p <span class="number">8086</span>:<span class="number">8086</span> influxdb</span><br></pre></td></tr></table></figure></li>
<li><p>Influxdb预备工作<br>打开InfluxDB系统自带的仪表盘</p>
<div align=center>
    <img src=/images/2023.11.17/203950.png />
  </div>
  点击看到系统的运行信息说明InfluxDB正在运行
  <div align=center>
     <img src=/images/2023.11.17/204100.png />
  </div>
  最后打开http://127.0.0.1:8086 进入InfluxDB管理面板并添加一个Token，也可使用初始化配置的Token。
  <div align=center>
   <img src=/images/2023.11.17/202719.png />
  </div></li>
<li><p>在Docker中安装Grafana：</p>
<p>这里使用Grafana官方命令:</p>
<div align=center>
  <img src=/images/2023.11.17/200401.png />
 </div>
  <figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> run -d --name=grafana -p <span class="number">3000</span>:<span class="number">3000</span> grafana/grafana-enterprise:<span class="number">10</span>.<span class="number">2</span>.<span class="number">1</span>-ubuntu</span><br></pre></td></tr></table></figure></li>
<li><p>为Grafana配置并进行初步测试：<br>打开<a href="http://127.0.0.1:3000/">http://127.0.0.1:3000</a> 进入Grafana面板并选择 连接-&gt;数据源-&gt;添加数据源-&gt;Influxdb 配置一个数据源</p>
  <div align=center>
    <img src=/images/2023.11.17/201957.png />
  </div>
  配置信息及细节见下图
  <div align=center>
    <img src=/images/2023.11.17/204922.png />
  </div>
  <div align=center>
    <img src=/images/2023.11.17/205752.png />
  </div>
  然后导入Grafana控制台模板，这里输入代码13315进行导入，在Grafana官网还有其他模板，感兴趣的读者可以自行了解
  <div align=center>
    <img src=/images/2023.11.17/212454.png />
  </div>
  但注意这里可能会有一个坑，笔者在第一次配置的时候发现Grafana数据无法正常显示。
  <div align=center>
    <img src=/images/2023.11.17/213004.png />
  </div>
  笔者推测是模板中的Flux语句与安装的Influxdb版本有略微的差别，于是笔者重写了模板中的Flux语句，最后我们可以看到Infludb Bucket中的数据成功在Grafana中显示出来。
  <div align=center>
    <img src=/images/2023.11.17/211018.png />
  </div>
  笔者将修改后的模板的json文件放在这里提供读者下载，读者将json导入Grafana模板即可。</li>
</ul>
<p><a href="/downloads/influxdb-2.0-oss-metrics.json">点击下载json文件</a></p>
<ul>
<li><p>在树莓派主机中安装Telegraf：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> update &amp;&amp; sudo apt-<span class="built_in">get</span> install telegraf</span><br></pre></td></tr></table></figure>
<p>Telegraf，启动！</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="literal">start</span> telegraf</span><br></pre></td></tr></table></figure>
<p>如果你希望树莓派每次开机Telegraf都能启动就执行该语句</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> telegraf</span><br></pre></td></tr></table></figure></li>
<li><p>最后的配置，三方协同<br>首先是Infludb，创建一个新的Bucket在LoadData中选择Telegraf，默认的inputs选择System即可</p>
<div align=center>
  <img src=/images/2023.11.17/221438.png />
</div>
将下列config复制到上图的标注处，这些会决定Telegraf会采集哪些类型的数据输入到Influxdb中
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="string">[[inputs.cpu]]</span></span><br><span class="line">percpu = <span class="literal">true</span></span><br><span class="line">totalcpu = <span class="literal">true</span></span><br><span class="line">collect_cpu_time = <span class="literal">false</span></span><br><span class="line">report_active = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="string">[[inputs.disk]]</span></span><br><span class="line">ignore_fs = [<span class="string">&quot;tmpfs&quot;</span>, <span class="string">&quot;devtmpfs&quot;</span>, <span class="string">&quot;devfs&quot;</span>, <span class="string">&quot;iso9660&quot;</span>, <span class="string">&quot;overlay&quot;</span>, <span class="string">&quot;aufs&quot;</span>, <span class="string">&quot;squashfs&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="string">[[inputs.diskio]]</span></span><br><span class="line"></span><br><span class="line"><span class="string">[[inputs.kernel]]</span></span><br><span class="line"></span><br><span class="line"><span class="string">[[inputs.mem]]</span></span><br><span class="line"></span><br><span class="line"><span class="string">[[inputs.processes]]</span></span><br><span class="line"></span><br><span class="line"><span class="string">[[inputs.swap]]</span></span><br><span class="line"></span><br><span class="line"><span class="string">[[inputs.system]]</span></span><br></pre></td></tr></table></figure>
在前面以及完成了Telegraf然后这里Influxdb告诉我们只需完成2.和3.即可将Telegraf link起来
<div align=center>
  <img src=/images/2023.11.17/222122.png />
</div>
接下来在树莓派终端追加Telegraf 配置，编辑telegraf.conf
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">nano <span class="regexp">/etc/</span>telegraf/telegraf.conf</span><br></pre></td></tr></table></figure>
追加以下内容并保存
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[[outputs.influxdb_v2]]</span></span><br><span class="line"><span class="attr">urls</span> = [<span class="string">&quot;http://127.0.0.1:8086&quot;</span>]</span><br><span class="line"><span class="attr">token</span> = <span class="string">&quot;$INFLUX_TOKEN&quot;</span></span><br><span class="line"><span class="attr">organization</span> = <span class="string">&quot;你的Organization&quot;</span></span><br><span class="line"><span class="attr">bucket</span> = <span class="string">&quot;你的Bucket&quot;</span></span><br></pre></td></tr></table></figure>
接着完成Influxdb刚刚提示你的第二步，在树莓派中输入指令(<INFLUX_TOKEN> 见influxdb提示)
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> <span class="attribute">INFLUX_TOKEN</span>=&lt;INFLUX_TOKEN&gt;</span><br></pre></td></tr></table></figure>
接着完成Influxdb刚刚提示你的第三步，在树莓派中输入指令(<URI> 见influxdb提示，追加--debug会将调试日志输出到控制台)
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">telegraf</span> <span class="literal">--</span><span class="comment">config</span> &lt;<span class="comment">URI</span>&gt; <span class="literal">--</span><span class="comment">debug</span></span><br></pre></td></tr></table></figure>
随后在控制台观察有以下日志输出说明配置成功了
<figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">I</span>! <span class="symbol">Starting</span> <span class="symbol">Telegraf</span> <span class="number">1.21</span><span class="number">.4</span>+ds1<span class="number">-0</span>ubuntu2</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">I</span>! <span class="symbol">Loaded</span> inputs: cpu disk diskio kernel mem processes swap system</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">I</span>! <span class="symbol">Loaded</span> aggregators:</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">I</span>! <span class="symbol">Loaded</span> processors:</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">I</span>! <span class="symbol">Loaded</span> outputs: influxdb_v2</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">I</span>! <span class="symbol">Tags</span> enabled: host=raspberry</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">I</span>! [agent] <span class="symbol">Config</span>: <span class="symbol">Interval</span>:<span class="number">10</span>s, <span class="symbol">Quiet</span>:false, <span class="symbol">Hostname</span>:<span class="string">&quot;raspberry&quot;</span>, <span class="symbol">Flush</span> <span class="symbol">Interval</span>:<span class="number">10</span>s</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">D</span>! [agent] <span class="symbol">Initializing</span> plugins</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">D</span>! [agent] <span class="symbol">Connecting</span> outputs</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">D</span>! [agent] <span class="symbol">Attempting</span> connection to [outputs.influxdb_v2]</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">D</span>! [agent] <span class="symbol">Successfully</span> connected to outputs.influxdb_v2</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">32</span><span class="symbol">Z</span> <span class="symbol">D</span>! [agent] <span class="symbol">Starting</span> service inputs</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">40</span><span class="symbol">Z</span> <span class="symbol">D</span>! [inputs.disk] [<span class="symbol">SystemPS</span>] partition <span class="number">0</span>: &#123;<span class="string">&quot;device&quot;</span>:<span class="string">&quot;sysfs&quot;</span>,<span class="string">&quot;mountpoint&quot;</span>:<span class="string">&quot;/sys&quot;</span>,<span class="string">&quot;fstype&quot;</span>:<span class="string">&quot;sysfs&quot;</span>,<span class="string">&quot;opts&quot;</span>:[<span class="string">&quot;rw&quot;</span>,<span class="string">&quot;nosuid&quot;</span>,<span class="string">&quot;nodev&quot;</span>,<span class="string">&quot;noexec&quot;</span>,<span class="string">&quot;relatime&quot;</span>]&#125;</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">40</span><span class="symbol">Z</span> <span class="symbol">D</span>! [inputs.disk] [<span class="symbol">SystemPS</span>] -&gt; using mountpoint <span class="string">&quot;/sys&quot;</span>...</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">40</span><span class="symbol">Z</span> <span class="symbol">D</span>! [inputs.disk] [<span class="symbol">SystemPS</span>] =&gt; kept...</span><br><span class="line"><span class="number">2023</span><span class="number">-11</span><span class="number">-17</span><span class="symbol">T15</span>:<span class="number">00</span>:<span class="number">40</span><span class="symbol">Z</span> <span class="symbol">D</span>! [inputs.disk] [<span class="symbol">SystemPS</span>] partition <span class="number">1</span>: &#123;<span class="string">&quot;device&quot;</span>:<span class="string">&quot;proc&quot;</span>,<span class="string">&quot;mountpoint&quot;</span>:<span class="string">&quot;/proc&quot;</span>,<span class="string">&quot;fstype&quot;</span>:<span class="string">&quot;proc&quot;</span>,<span class="string">&quot;opts&quot;</span>:[<span class="string">&quot;rw&quot;</span>,<span class="string">&quot;nosuid&quot;</span>,<span class="string">&quot;nodev&quot;</span>,<span class="string">&quot;noexec&quot;</span>,<span class="string">&quot;relatime&quot;</span>]&#125;</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
接着我们在Grafana添加一个以Telegraf Bucket的新数据源，然后在Grafana中导入代码为14126的Telegraf模板，读者可温习前面的配置步骤。最后面板数据成功展示在Grafana中，大功告成，收工！
<div align=center>
  <img src=/images/2023.11.17/231039.png />
</div></li>
</ul>
<h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><p>读者可在自己开发的应用中使用InfluxDB Client&#x2F;API将数据存储到Infludb中进行系统监控与数据分析。以Java为例，比较典型的是利用Micrometer + InfluxDB + Grafana将服务器、JVM和Application度量指标进行监控分析。<br>整个配置过程笔者的步骤稍多，需细心，相信读者也能通过这篇文章少踩一些坑少走些弯路。</p>
]]></content>
      <categories>
        <category>环境搭建</category>
        <category>应用监控</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>Ubuntu</tag>
        <tag>Docker</tag>
        <tag>Telegraf</tag>
        <tag>Influxdb</tag>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>礼物</title>
    <url>/2023/10/17/gift/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="b3ab1b57b437cf7daad039bf110120e989cce64adb555752407e0f2412853e9d">3e83d50de96ca2207a1aba1932db313a1b91373322dd25f3c27f364062631a34c8f40da60edcd32558c4f32607e8be22a081300a2d482a4da94066949fe4b6216c536697f20520762c35504531b69c84e884bd08493b15cee4c14a15ca63e2bf1648be51fa7e78ebdbdd591147d61399525b90900414ea06cf454dfd501d0f8a18b0e74a31850e31238d67ba29642a733154ef5e240872a66dd3c62c636e47c0d0eb4d9de7c734c17e39734dd4437eccf4fe674a664239ed6dc2dd61700760cd06941e239c43183123e087431f7d0abd697e900fe24485dd98a954ed4add69381cda0c786971e48e11615e8cff3c7aa1c8329769ac6df1597f3e2b4f76a2e680e8c29fa6183bcf6a8ea25006af0c9446df4d78698fa2909fd8db51ab7f428bf6314b0c415ae62db222a2edff49f4d28930e5120a1af2d4c7bd7135503cda50361e1c053fde83f081d63c2ac06cdc374fb043e5f994d51d0deac67e8432aac7ca027580bcfb7fd562fb6fd539cb61987a5e665d58bd85a9b2cead9e1dc259bd68e2fb0010131830acca50589a5c665942c89d9610eeb8201b191366dee13ca1ffd3baa8342879304bab75c00e491b2e8ea5302d227de1ef19d873e1c88d25a005</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入访问码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>友人帐</category>
      </categories>
  </entry>
  <entry>
    <title>Blog 启动！</title>
    <url>/2023/10/16/start/</url>
    <content><![CDATA[<p>🔸记录一个开始，这里什么也没有，往上翻翻吧！😉😉😉</p>
]]></content>
  </entry>
</search>
